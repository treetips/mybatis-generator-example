<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatisgenerator.mybatis.mapper.TestMapper">
  <resultMap id="BaseResultMap" type="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id_column" jdbcType="BIGINT" property="idColumn" />
    <result column="bit_column" jdbcType="BIT" property="bitColumn" />
    <result column="tinyint_column" jdbcType="TINYINT" property="tinyintColumn" />
    <result column="smallint_column" jdbcType="SMALLINT" property="smallintColumn" />
    <result column="mediumint_column" jdbcType="INTEGER" property="mediumintColumn" />
    <result column="int_column" jdbcType="INTEGER" property="intColumn" />
    <result column="decimal_column" jdbcType="DECIMAL" property="decimalColumn" />
    <result column="float_column" jdbcType="REAL" property="floatColumn" />
    <result column="double_column" jdbcType="DOUBLE" property="doubleColumn" />
    <result column="char_column" jdbcType="CHAR" property="charColumn" />
    <result column="varchar_column" jdbcType="VARCHAR" property="varcharColumn" />
    <result column="year_column" jdbcType="DATE" property="yearColumn" />
    <result column="date_column" jdbcType="DATE" property="dateColumn" />
    <result column="time_column" jdbcType="TIME" property="timeColumn" />
    <result column="timestamp_column" jdbcType="TIMESTAMP" property="timestampColumn" />
    <result column="tinytext_column" jdbcType="VARCHAR" property="tinytextColumn" />
    <result column="enum_column" jdbcType="CHAR" property="enumColumn" />
    <result column="set_column" jdbcType="CHAR" property="setColumn" />
    <result column="bool_column" jdbcType="BIT" property="boolColumn" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="binary_column" jdbcType="BINARY" property="binaryColumn" />
    <result column="varbinary_column" jdbcType="VARBINARY" property="varbinaryColumn" />
    <result column="tinyblob_column" jdbcType="VARBINARY" property="tinyblobColumn" />
    <result column="blob_column" jdbcType="VARBINARY" property="blobColumn" />
    <result column="mediumblob_column" jdbcType="LONGVARBINARY" property="mediumblobColumn" />
    <result column="longblob_column" jdbcType="LONGVARBINARY" property="longblobColumn" />
    <result column="text_column" jdbcType="LONGVARCHAR" property="textColumn" />
    <result column="mediumtext_column" jdbcType="LONGVARCHAR" property="mediumtextColumn" />
    <result column="longtext_column" jdbcType="LONGVARCHAR" property="longtextColumn" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id_column, bit_column, tinyint_column, smallint_column, mediumint_column, int_column, 
    decimal_column, float_column, double_column, char_column, varchar_column, year_column, 
    date_column, time_column, timestamp_column, tinytext_column, enum_column, set_column, 
    bool_column, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    binary_column, varbinary_column, tinyblob_column, blob_column, mediumblob_column, 
    longblob_column, text_column, mediumtext_column, longtext_column
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from test
    where id_column = #{idColumn,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from test
    where id_column = #{idColumn,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into test (id_column, bit_column, tinyint_column, 
      smallint_column, mediumint_column, int_column, 
      decimal_column, float_column, double_column, 
      char_column, varchar_column, year_column, 
      date_column, time_column, timestamp_column, 
      tinytext_column, enum_column, set_column, 
      bool_column, created_at, updated_at, 
      binary_column, varbinary_column, tinyblob_column, 
      blob_column, mediumblob_column, longblob_column, 
      text_column, mediumtext_column, longtext_column
      )
    values (#{idColumn,jdbcType=BIGINT}, #{bitColumn,jdbcType=BIT}, #{tinyintColumn,jdbcType=TINYINT}, 
      #{smallintColumn,jdbcType=SMALLINT}, #{mediumintColumn,jdbcType=INTEGER}, #{intColumn,jdbcType=INTEGER}, 
      #{decimalColumn,jdbcType=DECIMAL}, #{floatColumn,jdbcType=REAL}, #{doubleColumn,jdbcType=DOUBLE}, 
      #{charColumn,jdbcType=CHAR}, #{varcharColumn,jdbcType=VARCHAR}, #{yearColumn,jdbcType=DATE}, 
      #{dateColumn,jdbcType=DATE}, #{timeColumn,jdbcType=TIME}, #{timestampColumn,jdbcType=TIMESTAMP}, 
      #{tinytextColumn,jdbcType=VARCHAR}, #{enumColumn,jdbcType=CHAR}, #{setColumn,jdbcType=CHAR}, 
      #{boolColumn,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{binaryColumn,jdbcType=BINARY}, #{varbinaryColumn,jdbcType=VARBINARY}, #{tinyblobColumn,jdbcType=VARBINARY}, 
      #{blobColumn,jdbcType=VARBINARY}, #{mediumblobColumn,jdbcType=LONGVARBINARY}, #{longblobColumn,jdbcType=LONGVARBINARY}, 
      #{textColumn,jdbcType=LONGVARCHAR}, #{mediumtextColumn,jdbcType=LONGVARCHAR}, #{longtextColumn,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idColumn != null">
        id_column,
      </if>
      <if test="bitColumn != null">
        bit_column,
      </if>
      <if test="tinyintColumn != null">
        tinyint_column,
      </if>
      <if test="smallintColumn != null">
        smallint_column,
      </if>
      <if test="mediumintColumn != null">
        mediumint_column,
      </if>
      <if test="intColumn != null">
        int_column,
      </if>
      <if test="decimalColumn != null">
        decimal_column,
      </if>
      <if test="floatColumn != null">
        float_column,
      </if>
      <if test="doubleColumn != null">
        double_column,
      </if>
      <if test="charColumn != null">
        char_column,
      </if>
      <if test="varcharColumn != null">
        varchar_column,
      </if>
      <if test="yearColumn != null">
        year_column,
      </if>
      <if test="dateColumn != null">
        date_column,
      </if>
      <if test="timeColumn != null">
        time_column,
      </if>
      <if test="timestampColumn != null">
        timestamp_column,
      </if>
      <if test="tinytextColumn != null">
        tinytext_column,
      </if>
      <if test="enumColumn != null">
        enum_column,
      </if>
      <if test="setColumn != null">
        set_column,
      </if>
      <if test="boolColumn != null">
        bool_column,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="binaryColumn != null">
        binary_column,
      </if>
      <if test="varbinaryColumn != null">
        varbinary_column,
      </if>
      <if test="tinyblobColumn != null">
        tinyblob_column,
      </if>
      <if test="blobColumn != null">
        blob_column,
      </if>
      <if test="mediumblobColumn != null">
        mediumblob_column,
      </if>
      <if test="longblobColumn != null">
        longblob_column,
      </if>
      <if test="textColumn != null">
        text_column,
      </if>
      <if test="mediumtextColumn != null">
        mediumtext_column,
      </if>
      <if test="longtextColumn != null">
        longtext_column,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idColumn != null">
        #{idColumn,jdbcType=BIGINT},
      </if>
      <if test="bitColumn != null">
        #{bitColumn,jdbcType=BIT},
      </if>
      <if test="tinyintColumn != null">
        #{tinyintColumn,jdbcType=TINYINT},
      </if>
      <if test="smallintColumn != null">
        #{smallintColumn,jdbcType=SMALLINT},
      </if>
      <if test="mediumintColumn != null">
        #{mediumintColumn,jdbcType=INTEGER},
      </if>
      <if test="intColumn != null">
        #{intColumn,jdbcType=INTEGER},
      </if>
      <if test="decimalColumn != null">
        #{decimalColumn,jdbcType=DECIMAL},
      </if>
      <if test="floatColumn != null">
        #{floatColumn,jdbcType=REAL},
      </if>
      <if test="doubleColumn != null">
        #{doubleColumn,jdbcType=DOUBLE},
      </if>
      <if test="charColumn != null">
        #{charColumn,jdbcType=CHAR},
      </if>
      <if test="varcharColumn != null">
        #{varcharColumn,jdbcType=VARCHAR},
      </if>
      <if test="yearColumn != null">
        #{yearColumn,jdbcType=DATE},
      </if>
      <if test="dateColumn != null">
        #{dateColumn,jdbcType=DATE},
      </if>
      <if test="timeColumn != null">
        #{timeColumn,jdbcType=TIME},
      </if>
      <if test="timestampColumn != null">
        #{timestampColumn,jdbcType=TIMESTAMP},
      </if>
      <if test="tinytextColumn != null">
        #{tinytextColumn,jdbcType=VARCHAR},
      </if>
      <if test="enumColumn != null">
        #{enumColumn,jdbcType=CHAR},
      </if>
      <if test="setColumn != null">
        #{setColumn,jdbcType=CHAR},
      </if>
      <if test="boolColumn != null">
        #{boolColumn,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="binaryColumn != null">
        #{binaryColumn,jdbcType=BINARY},
      </if>
      <if test="varbinaryColumn != null">
        #{varbinaryColumn,jdbcType=VARBINARY},
      </if>
      <if test="tinyblobColumn != null">
        #{tinyblobColumn,jdbcType=VARBINARY},
      </if>
      <if test="blobColumn != null">
        #{blobColumn,jdbcType=VARBINARY},
      </if>
      <if test="mediumblobColumn != null">
        #{mediumblobColumn,jdbcType=LONGVARBINARY},
      </if>
      <if test="longblobColumn != null">
        #{longblobColumn,jdbcType=LONGVARBINARY},
      </if>
      <if test="textColumn != null">
        #{textColumn,jdbcType=LONGVARCHAR},
      </if>
      <if test="mediumtextColumn != null">
        #{mediumtextColumn,jdbcType=LONGVARCHAR},
      </if>
      <if test="longtextColumn != null">
        #{longtextColumn,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test
    <set>
      <if test="bitColumn != null">
        bit_column = #{bitColumn,jdbcType=BIT},
      </if>
      <if test="tinyintColumn != null">
        tinyint_column = #{tinyintColumn,jdbcType=TINYINT},
      </if>
      <if test="smallintColumn != null">
        smallint_column = #{smallintColumn,jdbcType=SMALLINT},
      </if>
      <if test="mediumintColumn != null">
        mediumint_column = #{mediumintColumn,jdbcType=INTEGER},
      </if>
      <if test="intColumn != null">
        int_column = #{intColumn,jdbcType=INTEGER},
      </if>
      <if test="decimalColumn != null">
        decimal_column = #{decimalColumn,jdbcType=DECIMAL},
      </if>
      <if test="floatColumn != null">
        float_column = #{floatColumn,jdbcType=REAL},
      </if>
      <if test="doubleColumn != null">
        double_column = #{doubleColumn,jdbcType=DOUBLE},
      </if>
      <if test="charColumn != null">
        char_column = #{charColumn,jdbcType=CHAR},
      </if>
      <if test="varcharColumn != null">
        varchar_column = #{varcharColumn,jdbcType=VARCHAR},
      </if>
      <if test="yearColumn != null">
        year_column = #{yearColumn,jdbcType=DATE},
      </if>
      <if test="dateColumn != null">
        date_column = #{dateColumn,jdbcType=DATE},
      </if>
      <if test="timeColumn != null">
        time_column = #{timeColumn,jdbcType=TIME},
      </if>
      <if test="timestampColumn != null">
        timestamp_column = #{timestampColumn,jdbcType=TIMESTAMP},
      </if>
      <if test="tinytextColumn != null">
        tinytext_column = #{tinytextColumn,jdbcType=VARCHAR},
      </if>
      <if test="enumColumn != null">
        enum_column = #{enumColumn,jdbcType=CHAR},
      </if>
      <if test="setColumn != null">
        set_column = #{setColumn,jdbcType=CHAR},
      </if>
      <if test="boolColumn != null">
        bool_column = #{boolColumn,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="binaryColumn != null">
        binary_column = #{binaryColumn,jdbcType=BINARY},
      </if>
      <if test="varbinaryColumn != null">
        varbinary_column = #{varbinaryColumn,jdbcType=VARBINARY},
      </if>
      <if test="tinyblobColumn != null">
        tinyblob_column = #{tinyblobColumn,jdbcType=VARBINARY},
      </if>
      <if test="blobColumn != null">
        blob_column = #{blobColumn,jdbcType=VARBINARY},
      </if>
      <if test="mediumblobColumn != null">
        mediumblob_column = #{mediumblobColumn,jdbcType=LONGVARBINARY},
      </if>
      <if test="longblobColumn != null">
        longblob_column = #{longblobColumn,jdbcType=LONGVARBINARY},
      </if>
      <if test="textColumn != null">
        text_column = #{textColumn,jdbcType=LONGVARCHAR},
      </if>
      <if test="mediumtextColumn != null">
        mediumtext_column = #{mediumtextColumn,jdbcType=LONGVARCHAR},
      </if>
      <if test="longtextColumn != null">
        longtext_column = #{longtextColumn,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id_column = #{idColumn,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test
    set bit_column = #{bitColumn,jdbcType=BIT},
      tinyint_column = #{tinyintColumn,jdbcType=TINYINT},
      smallint_column = #{smallintColumn,jdbcType=SMALLINT},
      mediumint_column = #{mediumintColumn,jdbcType=INTEGER},
      int_column = #{intColumn,jdbcType=INTEGER},
      decimal_column = #{decimalColumn,jdbcType=DECIMAL},
      float_column = #{floatColumn,jdbcType=REAL},
      double_column = #{doubleColumn,jdbcType=DOUBLE},
      char_column = #{charColumn,jdbcType=CHAR},
      varchar_column = #{varcharColumn,jdbcType=VARCHAR},
      year_column = #{yearColumn,jdbcType=DATE},
      date_column = #{dateColumn,jdbcType=DATE},
      time_column = #{timeColumn,jdbcType=TIME},
      timestamp_column = #{timestampColumn,jdbcType=TIMESTAMP},
      tinytext_column = #{tinytextColumn,jdbcType=VARCHAR},
      enum_column = #{enumColumn,jdbcType=CHAR},
      set_column = #{setColumn,jdbcType=CHAR},
      bool_column = #{boolColumn,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      binary_column = #{binaryColumn,jdbcType=BINARY},
      varbinary_column = #{varbinaryColumn,jdbcType=VARBINARY},
      tinyblob_column = #{tinyblobColumn,jdbcType=VARBINARY},
      blob_column = #{blobColumn,jdbcType=VARBINARY},
      mediumblob_column = #{mediumblobColumn,jdbcType=LONGVARBINARY},
      longblob_column = #{longblobColumn,jdbcType=LONGVARBINARY},
      text_column = #{textColumn,jdbcType=LONGVARCHAR},
      mediumtext_column = #{mediumtextColumn,jdbcType=LONGVARCHAR},
      longtext_column = #{longtextColumn,jdbcType=LONGVARCHAR}
    where id_column = #{idColumn,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mybatisgenerator.mybatis.entity.TestEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update test
    set bit_column = #{bitColumn,jdbcType=BIT},
      tinyint_column = #{tinyintColumn,jdbcType=TINYINT},
      smallint_column = #{smallintColumn,jdbcType=SMALLINT},
      mediumint_column = #{mediumintColumn,jdbcType=INTEGER},
      int_column = #{intColumn,jdbcType=INTEGER},
      decimal_column = #{decimalColumn,jdbcType=DECIMAL},
      float_column = #{floatColumn,jdbcType=REAL},
      double_column = #{doubleColumn,jdbcType=DOUBLE},
      char_column = #{charColumn,jdbcType=CHAR},
      varchar_column = #{varcharColumn,jdbcType=VARCHAR},
      year_column = #{yearColumn,jdbcType=DATE},
      date_column = #{dateColumn,jdbcType=DATE},
      time_column = #{timeColumn,jdbcType=TIME},
      timestamp_column = #{timestampColumn,jdbcType=TIMESTAMP},
      tinytext_column = #{tinytextColumn,jdbcType=VARCHAR},
      enum_column = #{enumColumn,jdbcType=CHAR},
      set_column = #{setColumn,jdbcType=CHAR},
      bool_column = #{boolColumn,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id_column = #{idColumn,jdbcType=BIGINT}
  </update>
</mapper>